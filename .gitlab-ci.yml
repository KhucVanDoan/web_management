image: gitlab/dind

variables:
  DOCKER_DRIVER: overlay
  DEV_CONTAINER_IMAGE: $PRIVATE_REGISTRY_HOST/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG
  STAGING_CONTAINER_IMAGE: $PRIVATE_REGISTRY_HOST/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG
  DEMO_CONTAINER_IMAGE: $PRIVATE_REGISTRY_HOST/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG

services:
  - docker:dind

stages:
  - build
  - deploy
  - build_avenue_stg
  - deploy_staging
  - build_demo
  # - deploy_demo

build:
  stage: build
  before_script:
    - docker login $PRIVATE_REGISTRY_HOST -u $PRIVATE_REGISTRY_USERNAME -p $PRIVATE_REGISTRY_PASSWD
    # - chmod +x ./setup_env.sh
    # - ./setup_env.sh
  script:
    - docker build -t $DEV_CONTAINER_IMAGE
      --build-arg REACT_APP_HOST="http://10.1.47.52:20000"
      --build-arg	REACT_APP_NOTIFICATION_HOST="http://10.1.47.52:20000"
      --build-arg	REACT_APP_SOCKET_NOTIFICATION_HOST="http://10.1.47.52:20000"
      --no-cache .
    - docker push $DEV_CONTAINER_IMAGE
  rules:
    - if: '$CI_COMMIT_BRANCH == "projects/avenue_wmsx_dev"'
deploy:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  rules:
    - if: '$CI_COMMIT_BRANCH == "projects/avenue_wmsx_dev"'
  script:
    - eval `ssh-agent -s`

    - bash -c 'echo "$SSH_PRIVATE_KEY" | ssh-add -'
    - mkdir -p ~/.ssh

    - ssh-keyscan -H 10.1.47.52 >> ~/.ssh/known_hosts

    - mkdir -p ~/.ssh

    - chmod 644 ~/.ssh/known_hosts

    - >
      ssh $SSH_USER@10.1.47.52
      "docker login $PRIVATE_REGISTRY_HOST -u $PRIVATE_REGISTRY_USERNAME -p $PRIVATE_REGISTRY_PASSWD;
      docker pull ${DEV_CONTAINER_IMAGE};
      docker stop  avenue_dev_mesx_web || true; 
      docker rm  avenue_dev_mesx_web || true; 
      docker run -d --name avenue_dev_mesx_web --restart=always  -p 20088:80 ${DEV_CONTAINER_IMAGE};
      docker image prune -f;"

build_avenue_stg:
  stage: build_avenue_stg
  before_script:
    - docker login $PRIVATE_REGISTRY_HOST -u $PRIVATE_REGISTRY_USERNAME -p $PRIVATE_REGISTRY_PASSWD
    # - chmod +x ./setup_env_staging.sh
    # - ./setup_env_staging.sh
  script:
    - docker build -t $STAGING_CONTAINER_IMAGE
      --build-arg REACT_APP_HOST="http://10.1.47.52:12101"
      --build-arg	REACT_APP_NOTIFICATION_HOST="http://10.1.47.52:12101"
      --build-arg	REACT_APP_SOCKET_NOTIFICATION_HOST="http://10.1.47.52:12101"
      --build-arg	REACT_APP_VTI_DOMAIN="" --no-cache .
    - docker push $STAGING_CONTAINER_IMAGE
  rules:
    - if: '$CI_COMMIT_BRANCH == "projects/avenue_wmsx_hq_staging"'
deploy_staging:
  stage: deploy_staging
  variables:
    GIT_STRATEGY: none
  rules:
    - if: '$CI_COMMIT_BRANCH == "projects/avenue_wmsx_hq_staging"'
  script:
    - eval `ssh-agent -s`

    - bash -c 'echo "$SSH_PRIVATE_KEY" | ssh-add -'
    - mkdir -p ~/.ssh

    - ssh-keyscan -H 10.1.47.52 >> ~/.ssh/known_hosts

    - mkdir -p ~/.ssh

    - chmod 644 ~/.ssh/known_hosts

    - >
      ssh $SSH_STAGING_USER@10.1.47.52
      "docker login $PRIVATE_REGISTRY_HOST -u $PRIVATE_REGISTRY_USERNAME -p $PRIVATE_REGISTRY_PASSWD;
      docker pull ${STAGING_CONTAINER_IMAGE};
      docker stop  stg-hq_avenue_web || true; 
      docker rm  stg-hq_avenue_web || true; 
      docker run -d --name stg-hq_avenue_web --restart=always -p 12100:80 ${STAGING_CONTAINER_IMAGE};
      docker image prune -f;"
